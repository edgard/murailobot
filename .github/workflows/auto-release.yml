name: Test and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  validate-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      # Code validation and testing steps
      - name: Tidy and verify modules
        run: |
          go mod tidy
          go mod verify

      - name: Download dependencies
        run: go mod download

      - name: Run go generate
        run: go generate ./...

      - name: Run vet
        run: go vet ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Run unit tests
        run: go test -race ./...

      # Create version tag if needed
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: master
          tag_prefix: ''

      # Only run release if a new version was created
      - name: Set up QEMU
        if: steps.tag_version.outputs.new_tag
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.tag_version.outputs.new_tag
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.tag_version.outputs.new_tag
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        if: steps.tag_version.outputs.new_tag
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      # Run GoReleaser with the new tag
      - name: Run GoReleaser
        if: steps.tag_version.outputs.new_tag
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.tag_version.outputs.new_tag }}
