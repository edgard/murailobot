name: Test and Release

on:
  push:
    branches:
      - master
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile.*'
      - 'config.yaml.example'

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Validate code
        run: |
          go mod tidy
          go mod verify
          go mod download
          go generate ./...
          go vet ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Run unit tests
        run: go test -race ./...

  release:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: master
          tag_prefix: ''

      # Remaining steps only run if a new tag was created
      - name: Set up Go
        if: steps.tag_version.outputs.new_tag
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Set up container build environment
        if: steps.tag_version.outputs.new_tag
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        if: steps.tag_version.outputs.new_tag
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cross-compile dependencies
        if: steps.tag_version.outputs.new_tag
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      # Checkout the repository again with the new tag
      - name: Checkout with new tag
        if: steps.tag_version.outputs.new_tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.tag_version.outputs.new_tag }}
          fetch-depth: 0

      - name: Run GoReleaser
        if: steps.tag_version.outputs.new_tag
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.tag_version.outputs.new_tag }}
